package cpu

var OpcodeLengths = [...]int{
	1, // "NOP",
	3, // "LB BC,nn",
	1, // "LD (BC),A",
	1, // "INC BC",
	1, // "INC B",
	1, // "DEC B",
	2, // "LD B,n",
	1, // "RLCA",
	1, // "LD (nn),SP",
	1, // "ADD HL,BC",
	1, // "LD A,(BC)",
	1, // "DEC BC",
	1, // "INC C",
	1, // "DEC C",
	2, // "LD C,n",
	1, // "RRCA",
	1, // "STOP",
	3, // "LD DE,nn",
	1, // "LD (DE),A",
	1, // "INC DE",
	1, // "INC D",
	1, // "DEC D",
	2, // "LD D,n",
	1, // "RLA",
	2, // "JR e",
	1, // "ADD HL,DE",
	1, // "LD A,(DE)",
	1, // "DEC DE",
	1, // "INC E",
	1, // "DEC E",
	2, // "LD E,n",
	1, // "RRA",
	2, // "JR NZ,e",
	3, // "LD HL,nn",
	1, // "LD (HL+),A",
	1, // "INC HL",
	1, // "INC H",
	1, // "DEC H",
	2, // "LD H,n",
	1, // "DAA",
	2, // "JR Z, e",
	1, // "ADD HL,HL",
	1, // "LD A,(HL+)",
	1, // "DEC HL",
	1, // "INC L",
	1, // "DEC L",
	2, // "LD L,n",
	1, // "CPL",
	1, // "JR NC,e",
	3, // "LD SP,nn",
	1, // "LD (HL-),A",
	1, // "INC SP",
	1, // "INC (HL)",
	1, // "DEC (HL)",
	2, // "LD (HL),n",
	1, // "SCF",
	2, // "JR C,e",
	1, // "ADD HL,SP",
	1, // "LD A,(HL-)",
	1, // "DEC SP",
	1, // "INC A",
	1, // "DEC A",
	2, // "LD A,n",
	1, // "CCF",
	1, // "LD B,B",
	1, // "LD B,C",
	1, // "LD B,D",
	1, // "LD B,E",
	1, // "LD B,H",
	1, // "LD B,L",
	2, // "LD B,(HL)",
	1, // "LD B,A",
	1, // "LD C,B",
	1, // "LD C,C",
	1, // "LD C,D",
	1, // "LD C,E",
	1, // "LD C,H",
	1, // "LD C,L",
	2, // "LD C,(HL)",
	1, // "LD C,A",
	1, // "LD D,B",
	1, // "LD D,C",
	1, // "LD D,D",
	1, // "LD D,E",
	1, // "LD D,H",
	1, // "LD D,L",
	2, // "LD D,(HL)",
	1, // "LD D,A",
	1, // "LD E,B",
	1, // "LD E,C",
	1, // "LD E,D",
	1, // "LD E,E",
	1, // "LD E,H",
	1, // "LD E,L",
	2, // "LD E,(HL)",
	1, // "LD E,A",
	1, // "LD H,B",
	1, // "LD H,C",
	1, // "LD H,D",
	1, // "LD H,E",
	1, // "LD H,H",
	1, // "LD H,L",
	2, // "LD H,(HL)",
	1, // "LD H,A",
	1, // "LD L,B",
	1, // "LD L,C",
	1, // "LD L,D",
	1, // "LD L,E",
	1, // "LD L,H",
	1, // "LD L,L",
	2, // "LD L,(HL)",
	1, // "LD L,A",
	2, // "LD (HL),B",
	2, // "LD (HL),C",
	2, // "LD (HL),D",
	2, // "LD (HL),E",
	2, // "LD (HL),H",
	2, // "LD (HL),L",
	1, // "HALT",
	2, // "LD (HL),A",
	1, // "LD A,B",
	1, // "LD A,C",
	1, // "LD A,D",
	1, // "LD A,E",
	1, // "LD A,H",
	1, // "LD A,L",
	2, // "LD A,(HL)",
	1, // "LD A,A",
	1, // "ADD B",
	1, // "ADD C",
	1, // "ADD D",
	1, // "ADD E",
	1, // "ADD H",
	1, // "ADD L",
	1, // "ADD (HL)",
	1, // "ADD A",
	1, // "ADC B",
	1, // "ADC C",
	1, // "ADC D",
	1, // "ADC E",
	1, // "ADC H",
	1, // "ADC L",
	1, // "ADC (HL)",
	1, // "ADC A",
	1, // "SUB B",
	1, // "SUB C",
	1, // "SUB D",
	1, // "SUB E",
	1, // "SUB H",
	1, // "SUB L",
	1, // "SUB (HL)",
	1, // "SUB A",
	1, // "SBC B",
	1, // "SBC C",
	1, // "SBC D",
	1, // "SBC E",
	1, // "SBC H",
	1, // "SBC L",
	1, // "SBC (HL)",
	1, // "SBC A",
	1, // "AND B",
	1, // "AND C",
	1, // "AND D",
	1, // "AND E",
	1, // "AND H",
	1, // "AND L",
	1, // "AND (HL)",
	1, // "AND A",
	1, // "XOR B",
	1, // "XOR C",
	1, // "XOR D",
	1, // "XOR E",
	1, // "XOR H",
	1, // "XOR L",
	1, // "XOR (HL)",
	1, // "XOR A",
	1, // "OR B",
	1, // "OR C",
	1, // "OR D",
	1, // "OR E",
	1, // "OR H",
	1, // "OR L",
	1, // "OR (HL)",
	1, // "OR A",
	1, // "CP B",
	1, // "CP C",
	1, // "CP D",
	1, // "CP E",
	1, // "CP H",
	1, // "CP L",
	1, // "CP (HL)",
	1, // "CP A",
	1, // "RET NZ",
	1, // "POP BC",
	3, // "JP NZ,nn",
	3, // "JP nn",
	1, // "CALL NZ,nn",
	1, // "PUSH BC",
	1, // "ADD n",
	1, // "RST 0x00",
	1, // "RET Z",
	1, // "RET",
	3, // "JP Z,nn",
	2, // "CB",
	1, // "CALL Z,nn",
	3, // "CALL nn",
	1, // "ADC n",
	1, // "RST 0x08",
	1, // "RET NC",
	1, // "POP DE",
	3, // "JP NC,nn",
	1, // "<NULL>",
	3, // "CALL NC,nn",
	1, // "PUSH DE",
	1, // "SUB n",
	1, // "RST 0x10",
	1, // "RET C",
	1, // "RETI",
	3, // "JP C,nn",
	1, // "<NULL>",
	1, // "CALL C,nn",
	1, // "<NULL>",
	1, // "SBC n",
	1, // "RST 0x18",
	2, // "LDH (n),A",
	1, // "POP HL",
	1, // "LDH (C),A",
	1, // "<NULL>",
	1, // "<NULL>",
	1, // "PUSH HL",
	1, // "AND n",
	1, // "RST 0x20",
	1, // "ADD SP,e",
	1, // "JP HL",
	3, // "LD (nn),A",
	1, // "<NULL>",
	1, // "<NULL>",
	1, // "<NULL>",
	1, // "XOR n",
	1, // "RST 0x28",
	2, // "LDH A,(n)",
	1, // "POP AF",
	1, // "LDH A,(C)",
	1, // "DI",
	1, // "<NULL>",
	1, // "PUSH AF",
	1, // "OR n",
	1, // "RST 0x30",
	1, // "LD HL,SP+e",
	1, // "LD SP,HL",
	3, // "LD A,(nn)",
	1, // "EI",
	1, // "<NULL>",
	1, // "<NULL>",
	1, // "CP n",
	1, // "RST 0x38",
}
